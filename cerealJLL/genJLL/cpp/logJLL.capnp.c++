// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: logJLL.capnp

#include "logJLL.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_baf9d1350eca5b67 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103,  91, 202,  14,  53, 209, 249, 186,
     13,   0,   0,   0,   1,   0,   0,   0,
    152, 232, 203,  56,  98, 166,  89, 182,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103,  74,  76,  76,  46,  99,
     97, 112, 110, 112,  58,  74, 111, 121,
    115, 116, 105,  99, 107,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
     97, 120, 101, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 116, 116, 111, 110, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_baf9d1350eca5b67 = b_baf9d1350eca5b67.words;
#if !CAPNP_LITE
static const uint16_t m_baf9d1350eca5b67[] = {0, 1};
static const uint16_t i_baf9d1350eca5b67[] = {0, 1};
const ::capnp::_::RawSchema s_baf9d1350eca5b67 = {
  0xbaf9d1350eca5b67, b_baf9d1350eca5b67.words, 55, nullptr, m_baf9d1350eca5b67,
  0, 2, i_baf9d1350eca5b67, nullptr, nullptr, { &s_baf9d1350eca5b67, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_edc21598032e456d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    109,  69,  46,   3, 152,  21, 194, 237,
     13,   0,   0,   0,   1,   0,   2,   0,
    152, 232, 203,  56,  98, 166,  89, 182,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103,  74,  76,  76,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,  64,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    108, 111, 103,  77, 111, 110, 111,  84,
    105, 109, 101,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 105, 100,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  74, 111, 121, 115,
    116, 105,  99, 107,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103,  91, 202,  14,  53, 209, 249, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_edc21598032e456d = b_edc21598032e456d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_edc21598032e456d[] = {
  &s_baf9d1350eca5b67,
};
static const uint16_t m_edc21598032e456d[] = {0, 2, 1};
static const uint16_t i_edc21598032e456d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_edc21598032e456d = {
  0xedc21598032e456d, b_edc21598032e456d.words, 64, d_edc21598032e456d, m_edc21598032e456d,
  1, 3, i_edc21598032e456d, nullptr, nullptr, { &s_edc21598032e456d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace cerealJLL {

// Joystick
constexpr uint16_t Joystick::_capnpPrivate::dataWordSize;
constexpr uint16_t Joystick::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Joystick::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Joystick::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event
constexpr uint16_t Event::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

